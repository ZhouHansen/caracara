{"version":3,"sources":["p2p/core.js","p2p/config.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["Automerge","require","EventEmitter","Writable","hyperdb","pump","uuid","hyperid","ForEachChunk","opts","cb","_this","Object","_Users_deka_Projects_caracara_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","_Users_deka_Projects_caracara_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","_Users_deka_Projects_caracara_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","call","chunk","enc","next","Saga","storage","key","username","_this2","operations","Map","newestOperations","users","timestamp","Date","now","doc","init","db","valueEncoding","_ready","_updateHistory","_watchForOperations","bind","message","_this3","concat","data","Promise","resolve","reject","put","err","replicate","live","userData","JSON","stringify","local","peer","remoteUserData","Error","parse","Buffer","from","_authorize","has","set","emit","on","_this4","delete","_this5","authorized","auth","authorize","onFinish","_this6","h","createHistoryStream","reverse","ws","_len","arguments","length","args","Array","_key","_Users_deka_Projects_caracara_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_3__","forEachChunk","objectMode","value","test","console","log","push","map","op","idx","peerValue","operation","text","historyMessage","newDoc","change","Text","insertAt","history","getHistory","state","snapshot","_Users_deka_Projects_caracara_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","join","_this7","watch","_this8","ready","__webpack_exports__","_len2","_key2","settings","SIGNAL_URLS","ICE_URLS","Prism","languages","markdown","extend","insertBefore","blockquote","pattern","alias","code","title","inside","punctuation","lookbehind","hr","list","url-reference","variable","string","bold","italic","url","util","clone","Plain","deserialize","MarkdownPreview","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","ref","editor","simpleOnChange","e","target","setState","onKey","lastKeyPress","toUpperCase","onChange","ops","filter","o","type","toJS","objectSpread","source","updatePeerValue","applyOperations","remote","forEach","applyOperation","renderMark","children","mark","attributes","react_default","a","createElement","assign","style","fontWeight","fontSize","margin","display","opacity","paddingLeft","lineHeight","borderBottom","prevProps","prevState","_this$state","changes","onKeyUp","cols","rows","autoComplete","autoFocus","node","others","object","texts","getTexts","toArray","grammar","tokens","tokenize","decorations","startText","shift","endText","startOffset","endOffset","start","getLength","token","content","reduce","l","t","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","end","available","remaining","dec","anchor","offset","focus","return","toConsumableArray","Component","webrtcOpts","config","iceServers","process","split","_data$split","_data$split2","slicedToArray","urls","credential","initComm","_ref","asyncToGenerator","regenerator_default","_callee2","publicKey","saga","sw","discoveryKey","signalUrls","wrap","_context2","prev","ram","initialize","swarm","id","stream","toString","signalhub","_ref2","_callee","_context","connect","t0","stop","_x3","apply","abrupt","_x","_x2","customStyles","top","left","right","bottom","marginRight","transform","MdDoc","val","comm","writeMessage","localHistory","draftId","removeAllListeners","_this$props2","Fragment","className","role","aria-label","Editor","App","saveUsername","modalIsOpen","openModal","assertThisInitialized","afterOpenModal","closeModal","params","URLSearchParams","window","location","search","get","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","onClick","BrowserRouter","Route","path","render","App_MdDoc","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.2930b606.chunk.js","sourcesContent":["const Automerge = require('automerge')\nconst EventEmitter = require('events')\nconst { Writable } = require('stream')\nconst hyperdb = require('hyperdb')\nconst pump = require('pump')\nconst hyperid = require('hyperid')\nconst uuid = hyperid()\n\nclass ForEachChunk extends Writable {\n  constructor (opts, cb) {\n    if (!cb) {\n      cb = opts\n      opts = {}\n    }\n    super(opts)\n\n    this.cb = cb\n  }\n\n  _write (chunk, enc, next) {\n    this.cb(chunk, enc, next)\n  }\n}\n\nconst forEachChunk = (...args) => new ForEachChunk(...args)\n\nclass Saga extends EventEmitter {\n  constructor (storage, key, username) {\n    super()\n\n    this.operations = new Map()\n    this.newestOperations = []\n    this.users = new Map()\n    this.username = username\n    this.timestamp = Date.now()\n    this.doc = Automerge.init()\n\n    this.db = hyperdb(storage, key, { valueEncoding: 'json' })\n  }\n\n  async initialize () {\n    await this._ready()\n\n    this._updateHistory(this._watchForOperations.bind(this))\n  }\n\n  // TODO(dk); rename to writeOperation\n  writeMessage (message) {\n    const key = `operations/${uuid()}`\n    // NOTE(dk): operation can be part of message. Maybe message can be seen as content receipt? but thus would make an op like a 2nd class citizen and we dont want to transmit that :thinking:\n    const data = {\n      key,\n      message,\n      username: this.username,\n      timestamp: Date.now()\n    }\n\n    return new Promise((resolve, reject) => {\n      this.db.put(key, data, (err) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(key)\n        }\n      })\n    })\n  }\n\n  replicate () {\n    return this.db.replicate({\n      live: true,\n      userData: JSON.stringify({\n        key: this.db.local.key,\n        username: this.username,\n        timestamp: this.timestamp\n      })\n    })\n  }\n\n  async connect (peer) {\n    if (!peer.remoteUserData) {\n      throw new Error('peer does not have userData')\n    }\n\n    const data = JSON.parse(peer.remoteUserData)\n\n    const key = Buffer.from(data.key)\n    const username = data.username\n\n    await this._authorize(key)\n\n    if (!this.users.has(username)) {\n      this.users.set(username, new Date())\n      this.emit('join', data)\n      peer.on('close', () => {\n        if (!this.users.has(username)) return\n        this.users.delete(username)\n        this.emit('leave', data)\n      })\n    }\n  }\n\n  _authorize (key) {\n    return new Promise((resolve, reject) => {\n      this.db.authorized(key, (err, auth) => {\n        if (err) return reject(err)\n\n        if (auth) {\n          return resolve()\n        }\n\n        this.db.authorize(key, (err) => {\n          if (err) return reject(err)\n          resolve()\n        })\n      })\n    })\n  }\n\n  _updateHistory (onFinish) {\n    const h = this.db.createHistoryStream({ reverse: true })\n\n    // reset newestOperations\n    this.newestOperations = []\n\n    const ws = forEachChunk({ objectMode: true }, (data, enc, next) => {\n      const { key, value } = data\n\n      if (/operations/.test(key)) {\n        console.log(`check if operations has key ${key}`)\n        if (this.operations.has(key)) {\n          console.log(`Destroying history stream - operation found with key ${key}`)\n          //h.destroy()\n            //return\n        } else {\n          console.log(`Adding new operation key ${key}`)\n          this.newestOperations.push(data)\n        }\n      }\n\n      next()\n    })\n\n    pump(h, ws, err => {\n      // work with latest operations in the right order\n      const opsLength = this.newestOperations.length;\n      this.newestOperations.reverse().map((op, idx) => {\n        console.log('aplicando operaciones nuevas')\n        const { key, value } = op;\n        const { message } = value;\n        const { peerValue } = message;\n        const { text, operation } = peerValue;\n        const historyMessage = `${value.username} ${operation === 'DELETE' ? 'removed' : 'added'} some text - ⌚️ ${value.timestamp}`;\n        const newDoc = Automerge.change(this.doc,\n          historyMessage,\n          doc => {\n            doc.text = new Automerge.Text()\n            doc.text.insertAt(0, value.message.peerValue.text)\n            return doc\n          }\n        )\n        const history = Automerge.getHistory(newDoc).map(state => [state.change.message, state.snapshot.text])\n        this.emit('message', { ...value, text: newDoc.text.join(''), history }, key)\n        // write latest operation\n        /*\n        if (idx === 0) {\n          console.log(`last known operation key ${op.key}`)\n          console.log(`last known operation text ${op.value.message.peerValue.text}`)\n          this.operations.set(op.key, op.value);\n        }\n        */\n        this.operations.set(op.key, op.value);\n      })\n\n      if (onFinish) onFinish(err)\n    })\n  }\n\n  _watchForOperations() {\n    this.db.watch('operations', () => {\n      this._updateHistory()\n    })\n\n  }\n\n  _ready () {\n    return new Promise(resolve => this.db.ready(resolve))\n  }\n}\n\nexport default (...args) => new Saga(...args)\n","const settings = {\n  SIGNAL_URLS: 'wss://signalhubws-olaf.glitch.me',\n  ICE_URLS: 'stun:stun.l.google.com:19302;stun:stun1.l.google.com:19302;stun:stun2.l.google.com:19302;stun:stun3.l.google.com:19302;stun:stun4.l.google.com:19302;stun:stun.ekiga.net;turn:numb.viagenie.ca,muazkh,webrtc@live.com;turn:192.158.29.39:3478?transport=udp,JZEOEt2V3Qb0y27GRntt2u2PAYA=,28224511:1379330808;turn:192.158.29.39:3478?transport=tcp,JZEOEt2V3Qb0y27GRntt2u2PAYA=,28224511:1379330808;turn:turn.bistri.com:80,homeo,homeo;turn:turn.anyfirewall.com:443?transport=tcp,webrtc,webrtc'\n};\n\nexport default settings;\n","import Plain from 'slate-plain-serializer'\nimport { Editor } from 'slate-react'\n\nimport Prism from 'prismjs'\nimport React, { Component } from 'react'\n\n/**\n * Add the markdown syntax to Prism.\n */\n\n// eslint-disable-next-line\n;Prism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"}],title:[{pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^[*_]|[*_]$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),Prism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic),Prism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold); // prettier-ignore\n\n/**\n * Deserialize the initial editor value.\n *\n * @type {Object}\n */\n\nconst initialValue = Plain.deserialize(\n  'Slate is flexible enough to add **decorations** that can format text based on its content. For example, this editor has **Markdown** preview decorations on it, to make it _dead_ simple to make an editor with built-in Markdown previewing.\\n## Try it out!\\nTry it out for yourself!'\n)\n\n/**\n * The markdown preview example.\n *\n * @type {Component}\n */\n\nclass MarkdownPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.peerValue.text || '',\n      lastKeyPress: null\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    /* OLD CHECK FOR SLATE STUFF :P\n    if (this.props.peerValue &&\n      this.props.peerValue.length &&\n      this.props.peerValue.length !== prevProps.peerValue.length) {\n      console.log('editor didupdate')\n      console.log(this.props.peerValue)\n      // this.editor.applyOperations(this.props.peerValue)\n    }\n    */\n    const { value, lastKeyPress } = this.state;\n    if (prevState.value === value) return;\n\n    // determine operation\n    // TODO(dk): in the future, consider EDIT op, maybe?\n    let operation = 'ADD'\n    if (lastKeyPress === 'BACKSPACE'){\n      operation = 'DELETE'\n    }\n    const changes = {\n      text: value,\n      operation\n    };\n    this.props.updatePeerValue(changes);\n  }\n\n\n  /**\n   *\n   * Render the example.\n   *\n   * @return {Component} component\n   */\n  render() {\n    /*\n    return (\n      <Editor\n        placeholder=\"Write some markdown...\"\n        defaultValue={initialValue}\n        renderMark={this.renderMark}\n        decorateNode={this.decorateNode}\n        onChange={this.onChange}\n        ref={this.ref}\n      />\n    )\n    */\n    return <textarea\n      value={this.props.peerValue.text}\n      onChange={this.simpleOnChange}\n      onKeyUp={this.onKey}\n      cols={120}\n      rows={80}\n      autoComplete={'off'}\n      autoFocus={true}\n    />;\n  }\n\n  /**\n   * Store a reference to the `editor`.\n   *\n   * @param {Editor} editor\n   */\n\n  ref = editor => {\n    this.editor = editor\n  }\n\n  simpleOnChange = e => {\n    const { value } = e.target;\n    this.setState({\n      value\n    })\n  }\n\n  onKey = e => {\n    this.setState({\n      lastKeyPress: e.key.toUpperCase()\n    });\n  }\n\n  onChange = change => {\n    const ops = change.operations\n      .filter(\n        o =>\n          o.type != 'set_selection' &&\n          o.type != 'set_value' &&\n          (!o.data || !o.data.has('source'))\n      )\n      .toJS()\n      .map(o => ({ ...o, data: { source: this.props.username } }))\n\n    this.props.updatePeerValue(ops);\n  }\n\n  /**\n   * When new `operations` are received from one of the other editors that is in\n   * sync with this one, apply them in a new change.\n   *\n   * @param {Array} operations\n   */\n\n  applyOperations = operations => {\n    this.remote = true\n    operations.forEach(o => this.editor.applyOperation(o))\n    this.remote = false\n  }\n\n  /**\n   * Render a Slate mark.\n   *\n   * @param {Object} props\n   * @param {Editor} editor\n   * @param {Function} next\n   * @return {Element}\n   */\n\n  renderMark = (props, editor, next) => {\n    const { children, mark, attributes } = props\n\n    switch (mark.type) {\n      case 'bold':\n        return <strong {...attributes}>{children}</strong>\n\n      case 'code':\n        return <code {...attributes}>{children}</code>\n\n      case 'italic':\n        return <em {...attributes}>{children}</em>\n\n      case 'underlined':\n        return <u {...attributes}>{children}</u>\n\n      case 'title': {\n        return (\n          <span\n            {...attributes}\n            style={{\n              fontWeight: 'bold',\n              fontSize: '20px',\n              margin: '20px 0 10px 0',\n              display: 'inline-block',\n            }}\n          >\n            {children}\n          </span>\n        )\n      }\n\n      case 'punctuation': {\n        return (\n          <span {...attributes} style={{ opacity: 0.2 }}>\n            {children}\n          </span>\n        )\n      }\n\n      case 'list': {\n        return (\n          <span\n            {...attributes}\n            style={{\n              paddingLeft: '10px',\n              lineHeight: '10px',\n              fontSize: '20px',\n            }}\n          >\n            {children}\n          </span>\n        )\n      }\n\n      case 'hr': {\n        return (\n          <span\n            {...attributes}\n            style={{\n              borderBottom: '2px solid #000',\n              display: 'block',\n              opacity: 0.2,\n            }}\n          >\n            {children}\n          </span>\n        )\n      }\n\n      default: {\n        return next()\n      }\n    }\n  }\n\n  /**\n   * Define a decorator for markdown styles.\n   *\n   * @param {Node} node\n   * @param {Function} next\n   * @return {Array}\n   */\n\n  decorateNode(node, editor, next) {\n    const others = next() || []\n    if (node.object !== 'block') return others\n\n    const string = node.text\n    const texts = node.getTexts().toArray()\n    const grammar = Prism.languages.markdown\n    const tokens = Prism.tokenize(string, grammar)\n    const decorations = []\n    let startText = texts.shift()\n    let endText = startText\n    let startOffset = 0\n    let endOffset = 0\n    let start = 0\n\n    function getLength(token) {\n      if (typeof token == 'string') {\n        return token.length\n      } else if (typeof token.content == 'string') {\n        return token.content.length\n      } else {\n        return token.content.reduce((l, t) => l + getLength(t), 0)\n      }\n    }\n\n    for (const token of tokens) {\n      startText = endText\n      startOffset = endOffset\n\n      const length = getLength(token)\n      const end = start + length\n\n      let available = startText.text.length - startOffset\n      let remaining = length\n\n      endOffset = startOffset + remaining\n\n      while (available < remaining) {\n        endText = texts.shift()\n        remaining = length - available\n        available = endText.text.length\n        endOffset = remaining\n      }\n\n      if (typeof token != 'string') {\n        const dec = {\n          anchor: {\n            key: startText.key,\n            offset: startOffset,\n          },\n          focus: {\n            key: endText.key,\n            offset: endOffset,\n          },\n          mark: {\n            type: token.type,\n          },\n        }\n\n        decorations.push(dec)\n      }\n\n      start = end\n    }\n\n    return [...others, ...decorations]\n  }\n}\n\n/**\n * Export.\n */\n\nexport default MarkdownPreview\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Modal from 'react-modal';\n\n// P2P stuff\nimport ram from 'random-access-memory';\nimport swarm from '@geut/discovery-swarm-webrtc';\nimport signalhub from 'signalhubws';\nimport Saga from './p2p/core';\nimport config from './p2p/config';\n\n// internal components\nimport MarkdownPreview from './Editor';\nimport './App.css';\n\n// P2P DEFAULTS\nconst webrtcOpts = {\n  config: {\n    iceServers: (process.env.ICE_URLS || config.ICE_URLS).split(';').map(data => {\n      const [urls, credential, username] = data.split(',')\n\n      if (credential && username) {\n        return {\n          urls,\n          credential,\n          username\n        }\n      }\n\n      return { urls }\n    })\n  }\n};\n\n// END P2P DEFAULTS\n\nconst initComm = async (username, key) => {\n  const publicKey = key && key.length > 0 ? key : null;\n  //username = Date.now().toString();\n  const saga = Saga(ram, publicKey, username);\n\n  await saga.initialize();\n\n  const sw = swarm({\n    id: username,\n    stream: () => {\n      return saga.replicate()\n    }\n  });\n\n\n  const discoveryKey = saga.db.discoveryKey.toString('hex');\n  const signalUrls = (process.env.SIGNAL_URLS || config.SIGNAL_URLS).split(';');\n  sw.join(signalhub(discoveryKey, signalUrls), webrtcOpts);\n\n  sw.on('connection', async peer => {\n    try {\n      await saga.connect(peer);\n    } catch (err) {\n      console.log(err);\n    }\n  })\n\n  return saga;\n}\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nclass MdDoc extends Component {\n  constructor() {\n    super();\n    this.comm = null;\n    this.state = {\n      peerValue: {\n        text: ''\n      },\n      localHistory: []\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { username, draftId } = this.props;\n    if (username !== prevProps.username) {\n      // username has been set\n      this.comm = await initComm(username, draftId);\n      // connect the listener\n      this.comm.on('message', data => {\n        console.log('new message arrival from:', data.username)\n        console.log('new message arrival content:', data.message)\n        console.log('message history:', data.history)\n        //if (this.props.username !== data.username){\n        this.setState({ peerValue: data.message.peerValue, localHistory: [ ...this.state.localHistory, data.history[0] ]});\n        //}\n      })\n    }\n  }\n\n  updatePeerValue = val => {\n    console.log('updatePeerValue', val)\n    this.setState({ peerValue: val }, () => {\n      this.comm.writeMessage({ peerValue: val, username: this.props.username });\n    });\n  }\n\n  componentWillUnmount() {\n    this.comm.removeAllListeners('message')\n  }\n\n  render() {\n    const { username, draftId } = this.props;\n    return (\n      <>\n        <header className=\"App-header\">\n          Caracara <span role=\"img\" aria-label=\"caracara bird using a emoji\">🐧</span>\n          <span className=\"App-username\">{username ? `${username} is online` : ''}</span>\n          <div>\n              {this.comm && this.comm.db.key ? `Draft: ${this.comm.db.key.toString('hex')}` : ''}\n          </div>\n        </header>\n        <div className=\"App-editor\">\n          <MarkdownPreview peerValue={this.state.peerValue} updatePeerValue={this.updatePeerValue}/>\n        </div>\n        <aside className=\"App-history\">\n          History:\n          <ul>\n              {this.state.localHistory.reverse().map(h => <li>{h[0]}</li>)}\n          </ul>\n        </aside>\n      </>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: true,\n      username: ''\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.params = new URLSearchParams(window.location.search);\n\n    this.draftId = this.params.get('draft');\n  }\n\n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  saveUsername = (e) => {\n    const { target } = e;\n    this.setState({ username: target.value });\n  }\n\n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n\n  render(props) {\n    return (\n      <div className=\"App\">\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Set your username\"\n        >\n          <form>\n            <legend>Set your username</legend>\n            <input type=\"text\" onChange={this.saveUsername}/>\n          </form>\n          <button onClick={this.closeModal}>Enter</button>\n        </Modal>\n        <Router>\n          <Route path=\"/\" render={props => {\n            return <MdDoc username={this.state.username} draftId={this.draftId} />\n          }} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}